/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package InterfaceGrafica;

import java.util.Arrays;
import java.util.Random;
import javax.swing.JOptionPane;

/**
 *
 * @author paulo.hbezerra
 */
public class TelaInicial extends javax.swing.JFrame {

    static String NaipeFunction(int NaipeNumeroJogador) {
        String Naipe;
        switch (NaipeNumeroJogador) {

            case 0:
                Naipe = "♠";
                break;
            case 1:
                Naipe = "♣";
                break;
            case 2:
                Naipe = "♥";
                break;
            default:
                Naipe = "♦";
                break;

        }
        return Naipe;
    }
    static String baralho[] = new String[5];
    static boolean cartavalida = false;
    static int i = 0;

    static int dialogButton = 0; //BOTAO JOGAR NOVAMENTE OU NAO

    static int dialogResult = 0; // RESULTADO DO BOTAO
    static int cartasjogador = 2, cartasmaquina = 2;
    static String Jogador1, JogadaUser = "";
    static int rodada = 0;

    static int contador = 0;
    static int maquinapedeoutra = 0;
    static int NaipeNumeroJogador = 0;
    static int NaipeNumeroMaquina = 0;

    static String Naipe = NaipeFunction(NaipeNumeroJogador);

    static int MaoMesaoutracarta = 0;
    static boolean fimJogo = true;

    static boolean iniciarjogo = true;
    
    static boolean outracarta = false;

    static Random mesa = new Random();

    static int MaoMesa = 0, MaoJogador = 0, MaoMesaNumero = 0, MaoJogadorNumero = 0;

    static boolean CartaRepetida(String baralho[], int MaoJogador, String Naipe) {

        for (i = 0; i < 52; i = i + 1) {
            //while (i <= 2) {
            if (baralho[i].equals(MaoJogador + Naipe)) {
                cartavalida = !cartavalida;
                System.out.println("A carta " + MaoJogador + Naipe + " Ja saiu");
            }
            //i = i + 1;

        }
        return cartavalida;
    }

    /**
     * Creates new form TelaInicial
     */
    public TelaInicial() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        Carta1 = new javax.swing.JTextField();
        Carta2 = new javax.swing.JTextField();
        BotaoOutraCarta = new javax.swing.JButton();
        BotaoPassar = new javax.swing.JButton();
        jLabel4Resultado = new javax.swing.JLabel();
        Carta3 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        Carta4 = new javax.swing.JTextField();
        Carta5 = new javax.swing.JTextField();
        PainelDeInfo = new javax.swing.JTextField();
        BotaoIniciar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("Casino do Away");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(270, 31, 294, 40);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("Carta 1");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(55, 100, 50, 14);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setText("Carta 2");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(187, 100, 50, 14);

        Carta1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Carta1ActionPerformed(evt);
            }
        });
        getContentPane().add(Carta1);
        Carta1.setBounds(27, 142, 98, 134);

        Carta2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Carta2ActionPerformed(evt);
            }
        });
        getContentPane().add(Carta2);
        Carta2.setBounds(164, 142, 104, 134);

        BotaoOutraCarta.setText("Outra Carta");
        BotaoOutraCarta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotaoOutraCartaActionPerformed(evt);
            }
        });
        getContentPane().add(BotaoOutraCarta);
        BotaoOutraCarta.setBounds(390, 440, 100, 29);

        BotaoPassar.setText("Passar");
        getContentPane().add(BotaoPassar);
        BotaoPassar.setBounds(270, 440, 90, 29);

        jLabel4Resultado.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4Resultado.setText("Carta 3");
        getContentPane().add(jLabel4Resultado);
        jLabel4Resultado.setBounds(350, 100, 50, 14);

        Carta3.setText("0");
        Carta3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Carta3ActionPerformed(evt);
            }
        });
        getContentPane().add(Carta3);
        Carta3.setBounds(320, 142, 103, 134);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setText("Carta 4");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(508, 100, 50, 14);

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setText("Carta 5");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(640, 100, 50, 14);
        getContentPane().add(Carta4);
        Carta4.setBounds(478, 142, 108, 134);
        getContentPane().add(Carta5);
        Carta5.setBounds(614, 142, 107, 134);

        PainelDeInfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PainelDeInfoActionPerformed(evt);
            }
        });
        getContentPane().add(PainelDeInfo);
        PainelDeInfo.setBounds(280, 290, 200, 50);

        BotaoIniciar.setText("Iniciar");
        BotaoIniciar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotaoIniciarActionPerformed(evt);
            }
        });
        getContentPane().add(BotaoIniciar);
        BotaoIniciar.setBounds(350, 360, 83, 29);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BotaoOutraCartaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotaoOutraCartaActionPerformed
        
        outracarta = true;
        
        if (outracarta == true && cartasjogador < 5) {
                    MaoJogador = mesa.nextInt(13) + 1;

                    switch (MaoJogador) {
                        case 1:
                            MaoJogadorNumero = MaoJogadorNumero + 1;
                            NaipeNumeroJogador = mesa.nextInt(3);
                            cartasjogador = cartasjogador + 1;
                            Naipe = NaipeFunction(NaipeNumeroJogador);
                            //JOptionPane.showMessageDialog(null, "Você tirou um AS de Naipe " + Naipe);
                            //JOptionPane.showMessageDialog(null, "Sua mão tem " + MaoJogadorNumero);
                            baralho[contador] = MaoJogador + Naipe;
                            contador = contador + 1;
                            break;
                        case 11:
                            MaoJogadorNumero = MaoJogadorNumero + 10;
                            cartasjogador = cartasjogador + 1;
                            //JOptionPane.showMessageDialog(null, "Você tirou um Valete");
                           // JOptionPane.showMessageDialog(null, "Sua mão tem " + MaoJogadorNumero);
                            baralho[contador] = 10 + Naipe;
                            contador = contador + 1;
                            break;
                        case 12:
                            MaoJogadorNumero = MaoJogadorNumero + 10;
                            cartasjogador = cartasjogador + 1;
                            //JOptionPane.showMessageDialog(null, "Você tirou um Rei");
                            //JOptionPane.showMessageDialog(null, "Sua mão tem " + MaoJogadorNumero);
                            baralho[contador] = 10 + Naipe;
                            contador = contador + 1;
                            break;
                        case 13:
                            MaoJogadorNumero = MaoJogadorNumero + 10;
                            cartasjogador = cartasjogador + 1;
                            //JOptionPane.showMessageDialog(null, "Você tirou um Dama");
                            //JOptionPane.showMessageDialog(null, "Sua mão tem " + MaoJogadorNumero);
                            baralho[contador] = 10 + Naipe;
                            contador = contador + 1;
                            break;
                        default:
                            MaoJogadorNumero = MaoJogadorNumero + MaoJogador;
                            cartasjogador = cartasjogador + 1;
                            NaipeNumeroJogador = mesa.nextInt(3);
                            NaipeNumeroMaquina = mesa.nextInt(3);
                            baralho[contador] = MaoJogador + Naipe;
                            contador = contador + 1;
                            //JOptionPane.showMessageDialog(null, "você tirou a carta " + MaoJogador + " de Naipe " + Naipe);
                            //JOptionPane.showMessageDialog(null, "Sua mão tem " + MaoJogadorNumero);
                            break;
                    }
                    outracarta = false;
                }
        
        Carta3.setText(String.valueOf(baralho[3]));


    }//GEN-LAST:event_BotaoOutraCartaActionPerformed

    private void PainelDeInfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PainelDeInfoActionPerformed

        PainelDeInfo.setText(String.valueOf(Jogador1));

        // TODO add your handling code here:
    }//GEN-LAST:event_PainelDeInfoActionPerformed

    private void Carta1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Carta1ActionPerformed

        // TODO add your handling code here:
    }//GEN-LAST:event_Carta1ActionPerformed

    private void Carta2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Carta2ActionPerformed

// TODO add your handling code here:
    }//GEN-LAST:event_Carta2ActionPerformed

    private void BotaoIniciarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotaoIniciarActionPerformed

        
        if(iniciarjogo == true){
         //CARTA 1
            MaoJogador = mesa.nextInt(13) + 1;
            NaipeNumeroJogador = mesa.nextInt(3);
            NaipeNumeroMaquina = mesa.nextInt(3);
            MaoMesa = mesa.nextInt(13) + 1;
            switch (MaoJogador) {
                case 1:
                    MaoJogadorNumero = MaoJogadorNumero + 1;
                    MaoMesaNumero = MaoMesaNumero + 1;
                    NaipeNumeroJogador = mesa.nextInt(3);
                    NaipeNumeroMaquina = mesa.nextInt(3);
                    Naipe = NaipeFunction(NaipeNumeroJogador);
                    //JOptionPane.showMessageDialog(null, "Sua primeira carta foi um AS de Naipe " + Naipe + ". Sua mão tem " + MaoJogadorNumero);
                    baralho[contador] = MaoJogador + Naipe;
                    contador = contador + 1;
                    break;
                case 11:
                    MaoJogadorNumero = MaoJogadorNumero + 10;
                    MaoMesaNumero = MaoMesaNumero + 10;
                    NaipeNumeroJogador = mesa.nextInt(3);
                    NaipeNumeroMaquina = mesa.nextInt(3);
                    Naipe = NaipeFunction(NaipeNumeroJogador);
                    //JOptionPane.showMessageDialog(null, "Sua primeira carta foi um Valete de " + Naipe + " . Sua mão tem " + MaoJogadorNumero);
                    baralho[contador] = 10 + Naipe;
                    contador = contador + 1;
                    break;
                case 12:
                    MaoJogadorNumero = MaoJogadorNumero + 10;
                    MaoMesaNumero = MaoMesaNumero + 10;
                    NaipeNumeroJogador = mesa.nextInt(3);
                    NaipeNumeroMaquina = mesa.nextInt(3);
                    Naipe = NaipeFunction(NaipeNumeroJogador);
                    //JOptionPane.showMessageDialog(null, "Sua primeira carta foi um Rei de " + Naipe + " . Sua mão tem " + MaoJogadorNumero);
                    baralho[contador] = 10 + Naipe;
                    contador = contador + 1;
                    break;
                case 13:
                    MaoJogadorNumero = MaoJogadorNumero + 10;
                    MaoMesaNumero = MaoMesaNumero + 10;
                    NaipeNumeroJogador = mesa.nextInt(3);
                    NaipeNumeroMaquina = mesa.nextInt(3);
                    Naipe = NaipeFunction(NaipeNumeroJogador);
                    //JOptionPane.showMessageDialog(null, "Sua primeira carta foi uma Dama de " + Naipe + " . Sua mão tem " + MaoJogadorNumero);
                    baralho[contador] = 10 + Naipe;
                    contador = contador + 1;
                    break;
                default:
                    MaoJogadorNumero = MaoJogadorNumero + MaoJogador;
                    MaoMesaNumero = MaoMesaNumero + MaoMesa;
                    NaipeNumeroJogador = mesa.nextInt(3);
                    NaipeNumeroMaquina = mesa.nextInt(3);
                    Naipe = NaipeFunction(NaipeNumeroJogador);
                    //JOptionPane.showMessageDialog(null, "Sua primeira carta foi um " + MaoJogador + " de Naipe " + Naipe + ". Sua mão tem " + MaoJogadorNumero);
                    baralho[contador] = MaoJogador + Naipe;
                    contador = contador + 1;
                    break;

            }
            System.out.println("mesa tirou um " + MaoMesaNumero);

            //CARTA 2
            MaoJogador = mesa.nextInt(13) + 1;
            NaipeNumeroJogador = mesa.nextInt(3);
            NaipeNumeroMaquina = mesa.nextInt(3);
            MaoMesa = mesa.nextInt(13) + 1;
            switch (MaoJogador) {
                case 1:
                    MaoJogadorNumero = MaoJogadorNumero + 1;
                    MaoMesaNumero = MaoMesaNumero + 1;
                    NaipeNumeroJogador = mesa.nextInt(3);
                    NaipeNumeroMaquina = mesa.nextInt(3);
                    Naipe = NaipeFunction(NaipeNumeroJogador);
                    //JOptionPane.showMessageDialog(null, "Sua segunda carta foi um AS de Naipe " + Naipe + ". Sua mão tem " + MaoJogadorNumero);
                    baralho[contador] = MaoJogador + Naipe;
                    contador = contador + 1;
                    break;
                case 11:
                    MaoJogadorNumero = MaoJogadorNumero + 10;
                    MaoMesaNumero = MaoMesaNumero + 10;
                    NaipeNumeroJogador = mesa.nextInt(3);
                    NaipeNumeroMaquina = mesa.nextInt(3);
                    Naipe = NaipeFunction(NaipeNumeroJogador);
                   // JOptionPane.showMessageDialog(null, "Sua segunda carta foi um Valete de " + Naipe + " . Sua mão tem " + MaoJogadorNumero);
                    baralho[contador] = 10 + Naipe;
                    contador = contador + 1;
                    break;
                case 12:
                    MaoJogadorNumero = MaoJogadorNumero + 10;
                    MaoMesaNumero = MaoMesaNumero + 10;
                    NaipeNumeroJogador = mesa.nextInt(3);
                    NaipeNumeroMaquina = mesa.nextInt(3);
                    Naipe = NaipeFunction(NaipeNumeroJogador);
                   // JOptionPane.showMessageDialog(null, "Sua segunda carta foi um Rei de " + Naipe + " . Sua mão tem " + MaoJogadorNumero);
                    baralho[contador] = 10 + Naipe;
                    contador = contador + 1;
                    cartavalida = CartaRepetida(baralho, MaoJogador, Naipe);
                    System.out.println("Carta valida igual a " + cartavalida);
                    break;
                case 13:
                    MaoJogadorNumero = MaoJogadorNumero + 10;
                    MaoMesaNumero = MaoMesaNumero + 10;
                    NaipeNumeroJogador = mesa.nextInt(3);
                    NaipeNumeroMaquina = mesa.nextInt(3);
                    Naipe = NaipeFunction(NaipeNumeroJogador);
                    //JOptionPane.showMessageDialog(null, "Sua segunda carta foi uma Dama de " + Naipe + " . Sua mão tem " + MaoJogadorNumero);
                    baralho[contador] = 10 + Naipe;
                    contador = contador + 1;
                    break;
                default:
                    MaoJogadorNumero = MaoJogadorNumero + MaoJogador;
                    MaoMesaNumero = MaoMesaNumero + MaoMesa;
                    NaipeNumeroJogador = mesa.nextInt(3);
                    NaipeNumeroMaquina = mesa.nextInt(3);
                    Naipe = NaipeFunction(NaipeNumeroJogador);
                    //JOptionPane.showMessageDialog(null, "Sua segunda carta foi um " + MaoJogador + " de Naipe " + Naipe + ". Sua mão tem " + MaoJogadorNumero);
                    baralho[contador] = MaoJogador + Naipe;
                    contador = contador + 1;
                    break;
            }
        }
        iniciarjogo = false;
        Carta1.setText(String.valueOf(baralho[0]));

        Carta2.setText(String.valueOf(baralho[1]));

        // TODO add your handling code here:
    }//GEN-LAST:event_BotaoIniciarActionPerformed

    private void Carta3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Carta3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Carta3ActionPerformed

    static int somatoria(int numero) {
        int resultado = 0;

        for (int i = 0; i <= numero; i++) {

            resultado = resultado + i;

        }
        return resultado;
    }

    public static void main(String args[]) {

        Jogador1 = JOptionPane.showInputDialog("Digite o nome do Jogador");

        boolean cartavalida = false;

        do {

            if (Jogador1.equals("") || Jogador1.equals(" ") || Jogador1.equals("   ")) {
                JOptionPane.showMessageDialog(null, "Nome do Jogador inválido");
            }

            
            System.out.println("mesa tirou um " + MaoMesaNumero);

            do {

                String[] JogadaSelecionada = {"Outra carta", "Passar", "Trucar"};

                JogadaUser = (String) JOptionPane.showInputDialog(null, "Na sua mão tem " + Arrays.toString(baralho),
                        "O que deseja fazer?", JOptionPane.QUESTION_MESSAGE, null, JogadaSelecionada, JogadaSelecionada[0]);

                if (JogadaUser.equals("Outra carta") || JogadaUser.equals("Passar") && MaoMesaNumero < 18 && cartasmaquina < 5) {
                    System.out.println(JogadaUser);
                    maquinapedeoutra = mesa.nextInt(4) + 1;

                    // TERMINA SAPORRA AQUI  while (cartavalida) {
                    if (maquinapedeoutra == 1 || maquinapedeoutra == 2) {
                        MaoMesaoutracarta = mesa.nextInt(13) + 1;
                        JOptionPane.showMessageDialog(null, "A maquina pediu outra carta");

                        switch (MaoMesaoutracarta) {
                            case 1:
                                MaoMesaNumero = MaoMesaoutracarta + 1;
                                cartasmaquina = cartasmaquina + 1;
                                break;
                            case 11:
                                MaoMesaNumero = MaoMesaoutracarta + 10;
                                cartasmaquina = cartasmaquina + 1;
                                break;
                            case 12:
                                MaoMesaNumero = MaoMesaoutracarta + 10;
                                cartasmaquina = cartasmaquina + 1;
                                break;
                            case 13:
                                MaoMesaNumero = MaoMesaoutracarta + 10;
                                cartasmaquina = cartasmaquina + 1;
                                break;
                            default:
                                MaoMesaNumero = MaoMesaoutracarta + MaoMesa;
                                cartasmaquina = cartasmaquina + 1;
                                break;
                        }
                    } else {
                        JOptionPane.showMessageDialog(null, "A maquina passou");
                    }
                    System.out.println("a maquina tem " + cartasmaquina);

                }
                // }
                if (cartasmaquina == 5) {

                    JOptionPane.showMessageDialog(null, "A maquina já tem 5 cartas e aguarda sua jogada");
                }

                
                if (cartasjogador == 5) {
                    JOptionPane.showMessageDialog(null, "Você já tem 5 cartas e precisa trucar");
                }
                rodada = rodada + 1;

                System.out.println("Rodada de número " + rodada);

                if (JogadaUser.equals("Trucar")) {
                    fimJogo = !fimJogo;
                }

            } while (fimJogo);

            if (MaoJogadorNumero > 21 && MaoMesaNumero > 21) {
                JOptionPane.showMessageDialog(null, "Empatou, ambos perderam. Você com " + MaoJogadorNumero + " e a maquina " + MaoMesaNumero);

                //System.out.println("Você ganhou com "+MaoJogadorNumero+" contra "+MaoMesaNumero);
            } else if (MaoJogadorNumero > 21 && MaoMesaNumero <= 21) {
                JOptionPane.showMessageDialog(null, "Você perdeu com " + MaoJogadorNumero + " contra " + MaoMesaNumero);
            } else if (MaoMesaNumero == MaoJogadorNumero) {
                JOptionPane.showMessageDialog(null, "Empatou, ambos com 21");
            } else if (MaoMesaNumero > 21 && MaoJogadorNumero <= 21) {
                JOptionPane.showMessageDialog(null, "Ganhou miseravi. Você com " + MaoJogadorNumero + " e a maquina " + MaoMesaNumero);
            } else if (MaoJogadorNumero > MaoMesaNumero && MaoJogadorNumero <= 21) {
                JOptionPane.showMessageDialog(null, "Ganhou miseravi. Você com " + MaoJogadorNumero + " e a maquina " + MaoMesaNumero);
            } else if (MaoMesaNumero > MaoJogadorNumero && MaoMesaNumero <= 21) {
                JOptionPane.showMessageDialog(null, "Você perdeu com " + MaoJogadorNumero + " contra " + MaoMesaNumero);

            } else {
                System.out.println("Olha isso ai");
            }

            dialogResult = JOptionPane.showConfirmDialog(null, "Jogar Novamente?");

            if (dialogResult == 0) {
                MaoMesa = 0;
                MaoJogador = 0;
                MaoMesaNumero = 0;
                MaoJogadorNumero = 0;
                rodada = 0;
                maquinapedeoutra = 0;
                NaipeNumeroJogador = 0;
                NaipeNumeroMaquina = 0;
                MaoMesaoutracarta = 0;
                fimJogo = !fimJogo;
                cartasjogador = 2;
                cartasmaquina = 2;
                JogadaUser = "";

            } else {
                JOptionPane.showMessageDialog(null, "Troque suas fichas no caixa senhor(a) " + Jogador1);
            }
            JOptionPane.showMessageDialog(null, baralho);

        } while (dialogResult == 0);

        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaInicial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaInicial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaInicial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaInicial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaInicial().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BotaoIniciar;
    private javax.swing.JButton BotaoOutraCarta;
    private javax.swing.JButton BotaoPassar;
    private javax.swing.JTextField Carta1;
    private javax.swing.JTextField Carta2;
    private javax.swing.JTextField Carta3;
    private javax.swing.JTextField Carta4;
    private javax.swing.JTextField Carta5;
    private javax.swing.JTextField PainelDeInfo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel4Resultado;
    private javax.swing.JLabel jLabel5;
    // End of variables declaration//GEN-END:variables
}
